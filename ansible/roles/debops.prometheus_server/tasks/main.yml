---


- name: Install required packages
  package:
    name: '{{ item }}'
    state: 'present'
  with_flattened:
    - '{{ prometheus_server__base_packages }}'
    - '{{ prometheus_server__packages }}'

- name: Create jobs, rules.d dirs
  file:
    path: '/etc/prometheus/{{ item }}'
    state: 'directory'
    owner: 'prometheus'
    mode: '0750'
  with_items:
    - 'jobs'
    - 'rules.d'

# generate files for each job
- name: Generate job files
  copy:
    content: '{{ item.content | to_yaml }}'
    dest: '/etc/prometheus/jobs/{{ item.name }}.yml'
    owner: 'prometheus'
    mode: '0640'
  when: item.state is not defined or item.state == 'present'
  with_items: '{{ prometheus_server__combined_jobs }}'

- name: Remove disabled job files
  file:
    path: '/etc/promtehus/jobs/{{ item.name }}.yml'
    state: 'absent'
  when: item.state|d('present') != 'present'
  with_items: '{{ prometheus_server__combined_jobs }}'

- name: Fetch all present job files
  find:
    path: '/etc/prometheus/jobs'
  register: prometheus_server__find_result

- name: Fetch data from present jobs
  shell: 'cat {{ item }}'
  with_items: '{{ prometheus_server__find_result.files | map(attribute="path")|list }}'
  register: prometheus_server__jobs
  changed_when: False
# end job files


# generate files for each rule
- name: Generate rule files
  copy:
    content: '{{ item.content | to_yaml }}'
    dest: '/etc/prometheus/rules.d/{{ item.name }}.rules.yml'
    owner: 'prometheus'
    mode: '0640'
  when: item.state is not defined or item.state == 'present'
  with_items: '{{ prometheus_server__combined_rules }}'

- name: Remove disabled rules files
  file:
    path: '/etc/promtehus/rules.d/{{ item.name }}.rules.yml'
    state: 'absent'
  when: item.state|d('present') != 'present'
  with_items: prometheus_server__combined_rules

- name: Fetch all present rule files
  find:
    path: '/etc/prometheus/rules.d'
  register: prometheus_server__find_result_rules
# end rule files


- name: Generatet Prometheus configuration
  vars:
    config: '{{ prometheus_server__combined_config | combine( {
      "scrape_configs": prometheus_server__jobs.results | map(attribute="stdout")|map("from_yaml")|list,
      "rule_files": prometheus_server__find_result_rules.files | map(attribute="path")|list
    } ) }}'
  template:
    src: 'etc/prometheus/prometheus.yml.j2'
    dest: '/etc/prometheus/prometheus.yml'
  notify: [ 'Restart prometheus' ]

- name: Enable Services
  service:
    name: '{{ item }}'
    enabled: 'yes'
    state: 'started'
  with_items:
    - prometheus
