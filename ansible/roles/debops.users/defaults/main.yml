---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# debops.users default variables [[[
# ==================================

# .. contents:: Sections
#    :local:
#
# .. include:: ../../../includes/global.rst


# APT packages [[[
# ----------------

# .. envvar:: users__base_packages [[[
#
# List of base packages to install.
users__base_packages:
  - '{{ [ "acl" ]
        if (users__acl_enabled|bool)
        else [] }}'

                                                                   # ]]]
# .. envvar:: users__packages [[[
#
# List of custom packages to install.
users__packages: []
                                                                   # ]]]
                                                                   # ]]]
# Global defaults [[[
# -------------------

# .. envvar:: users__enabled [[[
#
# Should Ansible manage local user accounts? Set to False to disable.
users__enabled: True

                                                                   # ]]]
# .. envvar:: users__no_log [[[
#
# Enable or disable Ansible task logging. By default all task logging is
# disabled because the variables used to define user accounts can contain
# passwords. This variable should not be changed apart for debugging.
users__no_log: True

                                                                   # ]]]
# .. envvar:: users__acl_enabled [[[
#
# Enable or disable support for filesystem ACL management.
users__acl_enabled: True

                                                                   # ]]]
# .. envvar:: users__default_system [[[
#
# If enabled, user groups and accounts will be considered "system" accounts by
# default (ie. local accounts vs. LDAP accounts) and will be created with UID
# and GID < 1000.
users__default_system: '{{ (True
                            if (ansible_local|d() and ansible_local.ldap|d() and
                                ansible_local.ldap.enabled | bool)
                            else False) }}'

                                                                   # ]]]
# .. envvar:: users__default_shell [[[
#
# Specify absolute path of the shell which should be configured on all user
# accounts managed by this role, if not overriden by the user configuration. If
# not specified, the shell won't be changed, but new accounts will not have
# a defined shell either.
users__default_shell: ''
                                                                   # ]]]
                                                                   # ]]]
# Lists of managed UNIX groups [[[
# --------------------------------

# These lists can be used to manage UNIX groups through Ansible inventory. See
# :ref:`users__ref_groups` for more details.

# .. envvar:: users__groups [[[
#
# List of UNIX groups to manage on all hosts in Ansible inventory.
users__groups: []

                                                                   # ]]]
# .. envvar:: users__group_groups [[[
#
# List of UNIX groups to manage on hosts in specific Ansible inventory group.
users__group_groups: []

                                                                   # ]]]
# .. envvar:: users__host_groups [[[
#
# List of UNIX groups to manage on specific hosts in Ansible inventory.
users__host_groups: []

                                                                   # ]]]
# .. envvar:: users__dependent_groups [[[
#
# List of UNIX groups to manage on the current playbook host. This variable is
# meant to be used from a role dependency in :file:`role/meta/main.yml` or in
# a playbook.
users__dependent_groups: []

                                                                   # ]]]
                                                                   # ]]]
# Lists of managed UNIX accounts [[[
# ----------------------------------

# These lists can be used to manage UNIX user accounts through Ansible
# inventory. See :ref:`users__ref_accounts` for more details.

# .. envvar:: users__accounts [[[
#
# List of user accounts to manage on all hosts in Ansible inventory.
users__accounts: []

                                                                   # ]]]
# .. envvar:: users__group_accounts [[[
#
# List of UNIX user accounts to manage on hosts in specific Ansible inventory
# group.
users__group_accounts: []

                                                                   # ]]]
# .. envvar:: users__host_accounts [[[
#
# List of UNIX user accounts to manage on specific hosts in Ansible inventory.
users__host_accounts: []

                                                                   # ]]]
# .. envvar:: users__default_accounts [[[
#
# List of default UNIX user accounts managed by Ansible.
users__default_accounts: []

                                                                   # ]]]
# .. envvar:: users__admin_accounts [[[
#
# List of UNIX administrator accounts managed by Ansible.
users__admin_accounts: '{{ lookup("template", "lookup/users__admin_accounts.j2") | from_yaml }}'
                                                                   # ]]]
                                                                   # ]]]
# .. envvar:: users__dependent_accounts [[[
#
# List of user accounts to manage on the current playbook host. This variable
# is meant to be used from a role dependency in :file:`role/meta/main.yml` or
# in a playbook.
users__dependent_accounts: []

                                                                   # ]]]
# Management of user resources [[[
# --------------------------------

# Custom user resources like directories, files and symlinks can be configured
# in separate lists. Check the :ref:`users__ref_resources` for more details.

# The support for different parameters here is limited, you might want to check
# out the :ref:`debops.resources` for more extensive resource
# management.

# .. envvar:: users__resources [[[
#
# Manage user resources on all hosts in Ansible inventory.
users__resources: []

                                                                   # ]]]
# .. envvar:: users__group_resources [[[
#
# Manage user resources on hosts in specific Ansible inventory group.
users__group_resources: []

                                                                   # ]]]
# .. envvar:: users__host_resources [[[
#
# Manage user resources on specific hosts in Ansible inventory.
users__host_resources: []
                                                                   # ]]]
                                                                   # ]]]
# User configuration files (dotfiles) [[[
# ---------------------------------------

# These variables are used to manage the user configuration files (dotfiles).

# .. envvar:: users__dotfiles_enabled [[[
#
# Enable or disable management of user dotfiles via :command:`yadm` script. See
# the :ref:`debops.yadm` role for script installation and dotfile mirroring.
users__dotfiles_enabled: '{{ True
                             if (ansible_local|d() and ansible_local.yadm|d() and
                                 ansible_local.yadm.dotfiles|d())
                             else False }}'

                                                                   # ]]]
# .. envvar:: users__dotfiles_repo [[[
#
# An URL or an absolute path on the remote host to the :command:`git` dotfiles
# repository. The repository will be used by default if the dotfiles management
# is enabled without specifying a custom repository for the user.
users__dotfiles_repo: '{{ ansible_local.yadm.dotfiles
                          if (ansible_local|d() and ansible_local.yadm|d() and
                              ansible_local.yadm.dotfiles|d())
                          else "" }}'
                                                                   # ]]]
                                                                   # ]]]
                                                                   # ]]]
